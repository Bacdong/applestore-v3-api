// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using applestore.Data.EF;

namespace applestore.Data.Migrations
{
    [DbContext(typeof(AppleDbContext))]
    partial class AppleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("applestore.Data.Entity.AppConfig", b =>
                {
                    b.Property<string>("key")
                        .HasColumnType("text");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("key");

                    b.ToTable("AppConfigs");
                });

            modelBuilder.Entity("applestore.Data.Entity.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("applestore.Data.Entity.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("isPublic")
                        .HasColumnType("boolean");

                    b.Property<int?>("parentId")
                        .HasColumnType("integer");

                    b.Property<int>("sortOrder")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("applestore.Data.Entity.CategoryTranslation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("brief")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("categoryId")
                        .HasColumnType("integer");

                    b.Property<int>("languageId")
                        .HasColumnType("integer")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("seoAlias")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("title")
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("languageId");

                    b.ToTable("CategoryTranslations");
                });

            modelBuilder.Entity("applestore.Data.Entity.Contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("applestore.Data.Entity.Language", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("isDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("applestore.Data.Entity.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("shippingAddress")
                        .HasColumnType("text");

                    b.Property<string>("shippingEmail")
                        .HasColumnType("text");

                    b.Property<string>("shippingName")
                        .HasColumnType("text");

                    b.Property<string>("shippingPhone")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("applestore.Data.Entity.OrderLine", b =>
                {
                    b.Property<int>("orderId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("orderId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("applestore.Data.Entity.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2020, 10, 12, 8, 41, 37, 217, DateTimeKind.Utc).AddTicks(6307));

                    b.Property<decimal>("originalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<string>("seoAlias")
                        .HasColumnType("text");

                    b.Property<int>("stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("viewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("applestore.Data.Entity.ProductInCategory", b =>
                {
                    b.Property<int>("categoryId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.HasKey("categoryId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("ProductInCategories");
                });

            modelBuilder.Entity("applestore.Data.Entity.ProductTranslation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("brief")
                        .HasColumnType("text");

                    b.Property<int>("languageId")
                        .HasColumnType("integer")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<string>("seoAlias")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.Property<string>("title")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.HasKey("id");

                    b.HasIndex("languageId");

                    b.HasIndex("productId");

                    b.ToTable("ProductTranslations");
                });

            modelBuilder.Entity("applestore.Data.Entity.Promotion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ProductCategoryIds")
                        .HasColumnType("text");

                    b.Property<bool>("applyForAll")
                        .HasColumnType("boolean");

                    b.Property<decimal>("discountAmount")
                        .HasColumnType("numeric");

                    b.Property<int?>("discountPercent")
                        .HasColumnType("integer");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("productIds")
                        .HasColumnType("text");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("applestore.Data.Entity.Transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("externalTransactionId")
                        .HasColumnType("text");

                    b.Property<decimal>("fee")
                        .HasColumnType("numeric");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<string>("provider")
                        .HasColumnType("text");

                    b.Property<string>("result")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("applestore.Data.Entity.Cart", b =>
                {
                    b.HasOne("applestore.Data.Entity.Product", "product")
                        .WithMany("carts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("applestore.Data.Entity.CategoryTranslation", b =>
                {
                    b.HasOne("applestore.Data.Entity.Category", "category")
                        .WithMany("categoryTranslations")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("applestore.Data.Entity.Language", "language")
                        .WithMany("categoryTranslations")
                        .HasForeignKey("languageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("applestore.Data.Entity.OrderLine", b =>
                {
                    b.HasOne("applestore.Data.Entity.Order", "order")
                        .WithMany("orderLines")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("applestore.Data.Entity.Product", "product")
                        .WithMany("orderLines")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("applestore.Data.Entity.ProductInCategory", b =>
                {
                    b.HasOne("applestore.Data.Entity.Category", "category")
                        .WithMany("productInCategories")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("applestore.Data.Entity.Product", "product")
                        .WithMany("productInCategories")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("applestore.Data.Entity.ProductTranslation", b =>
                {
                    b.HasOne("applestore.Data.Entity.Language", "language")
                        .WithMany("productTranslations")
                        .HasForeignKey("languageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("applestore.Data.Entity.Product", "product")
                        .WithMany("productTranslations")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
